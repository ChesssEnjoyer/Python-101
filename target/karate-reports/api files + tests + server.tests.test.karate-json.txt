{"failedCount":1,"prefixedPath":"api files + tests + server\/tests\/test.feature","packageQualifiedName":"api files + tests + server.tests.test","loopIndex":-1,"relativePath":"api files + tests + server\/tests\/test.feature","scenarioResults":[{"sectionIndex":1,"stepResults":[{"result":{"nanos":156927559,"millis":156.927559,"status":"passed"},"step":{"line":11,"prefix":"Given","index":0,"text":"url 'http:\/\/localhost:5000\/students\/add'"}},{"result":{"nanos":28751658,"millis":28.751658,"status":"passed"},"step":{"endLine":19,"line":12,"prefix":"And","docString":"{\n    \"FirstName\": \"Giovani\",\n    \"LastName\": \"Picolini\",\n    \"class\": \"2b\"\n}","index":1,"text":"request"}},{"result":{"nanos":504145910,"millis":504.14591,"status":"passed"},"step":{"line":20,"prefix":"When","index":2,"text":"method POST"},"stepLog":"19:39:40.449 request:\n1 > POST http:\/\/localhost:5000\/students\/add\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 58\n1 > Host: localhost:5000\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.14 (Java\/17.0.6)\n1 > Accept-Encoding: gzip,deflate\n{\"FirstName\":\"Giovani\",\"LastName\":\"Picolini\",\"class\":\"2b\"}\n\n19:39:40.559 response time in milliseconds: 100\n1 < 500\n1 < Server: Werkzeug\/2.3.4 Python\/3.10.7\n1 < Date: Tue, 23 May 2023 17:39:40 GMT\n1 < Content-Type: text\/html; charset=utf-8\n1 < Content-Length: 13883\n1 < Connection: close\n<!doctype html>\n<html lang=en>\n  <head>\n    <title>TypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n \/\/ Werkzeug Debugger<\/title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"><\/script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"U8bJF8gx4EpyVZiVjE91\";\n    <\/script>\n  <\/head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>TypeError<\/h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/p>\n<\/div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)<\/em><\/h2>\n<div class=\"traceback\">\n  <h3><\/h3>\n  <ul><li><div class=\"frame\" id=\"frame-140653190507408\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2213<\/em>,\n      in <code class=\"function\">__call__<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    <\/span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>WSGI application. This calls :meth:`wsgi_app`, which can be<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>wrapped to apply middleware.<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.wsgi_app(environ, start_response)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190503824\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2193<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>raise<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>return response(environ, start_response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>finally:<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499568\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\"<\/cite>,\n      line <em class=\"line\">165<\/em>,\n      in <code class=\"function\">wrapped_function<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span># Wrap exception handlers with cross_origin<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># These error handlers will still respect the behavior of the route<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if options.get(&#39;intercept_exceptions&#39;, True):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>def _after_request_decorator(f):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>def wrapped_function(*args, **kwargs):<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                    <\/span>return cors_after_request(app.make_response(f(*args, **kwargs)))<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>return wrapped_function<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>if hasattr(app, &#39;handle_exception&#39;):<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>app.handle_exception = _after_request_decorator(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                    <\/span>app.handle_exception)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499680\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2190<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>ctx = self.request_context(environ)<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>error: BaseException | None = None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506624\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1487<\/em>,\n      in <code class=\"function\">full_dispatch_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.preprocess_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>if rv is None:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>rv = self.dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.handle_user_exception(e)<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.finalize_request(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">    <\/span>def finalize_request(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>self,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>rv: ft.ResponseReturnValue | HTTPException,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>from_error_handler: bool = False,<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506736\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1506<\/em>,\n      in <code class=\"function\">finalize_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>with the `from_error_handler` flag.  If enabled, failures in<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>response processing will be logged and otherwise ignored.<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>:internal:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>response = self.make_response(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>response = self.process_response(response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>request_finished.send(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>self, _async_wrapper=self.ensure_sync, response=response<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190501024\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1801<\/em>,\n      in <code class=\"function\">make_response<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">                    <\/span>&#34; (body, status), or (body, headers).&#34;<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>)<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># the body must not be None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if rv is None:<\/pre>\n<pre class=\"line current\"><span class=\"ws\">            <\/span>raise TypeError(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>f&#34;The view function for {request.endpoint!r} did not&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; return a valid response. The function either returned&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; None or ended without a return statement.&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre><\/div>\n<\/div>\n<\/ul>\n  <blockquote>TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/blockquote>\n<\/div>\n\n<div class=\"plain\">\n    <p>\n      This is the Copy\/Paste friendly version of the traceback.\n    <\/p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py&#34;, line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1506, in finalize_request\n    response = self.make_response(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/textarea>\n<\/div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.<\/span>\n<\/div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC<\/strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      <\/div>\n    <\/div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked<\/h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        <\/form>\n      <\/div>\n    <\/div>\n  <\/body>\n<\/html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\", line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1506, in finalize_request\n    response = self.make_response(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n\n\n-->\n\n\n"},{"result":{"nanos":17522563,"errorMessage":"status code was: 500, expected: 201, response time in milliseconds: 100, url: http:\/\/localhost:5000\/students\/add, response: \n<!doctype html>\n<html lang=en>\n  <head>\n    <title>TypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n \/\/ Werkzeug Debugger<\/title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"><\/script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"U8bJF8gx4EpyVZiVjE91\";\n    <\/script>\n  <\/head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>TypeError<\/h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/p>\n<\/div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)<\/em><\/h2>\n<div class=\"traceback\">\n  <h3><\/h3>\n  <ul><li><div class=\"frame\" id=\"frame-140653190507408\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2213<\/em>,\n      in <code class=\"function\">__call__<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    <\/span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>WSGI application. This calls :meth:`wsgi_app`, which can be<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>wrapped to apply middleware.<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.wsgi_app(environ, start_response)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190503824\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2193<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>raise<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>return response(environ, start_response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>finally:<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499568\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\"<\/cite>,\n      line <em class=\"line\">165<\/em>,\n      in <code class=\"function\">wrapped_function<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span># Wrap exception handlers with cross_origin<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># These error handlers will still respect the behavior of the route<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if options.get(&#39;intercept_exceptions&#39;, True):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>def _after_request_decorator(f):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>def wrapped_function(*args, **kwargs):<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                    <\/span>return cors_after_request(app.make_response(f(*args, **kwargs)))<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>return wrapped_function<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>if hasattr(app, &#39;handle_exception&#39;):<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>app.handle_exception = _after_request_decorator(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                    <\/span>app.handle_exception)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499680\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2190<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>ctx = self.request_context(environ)<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>error: BaseException | None = None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506624\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1487<\/em>,\n      in <code class=\"function\">full_dispatch_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.preprocess_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>if rv is None:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>rv = self.dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.handle_user_exception(e)<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.finalize_request(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">    <\/span>def finalize_request(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>self,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>rv: ft.ResponseReturnValue | HTTPException,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>from_error_handler: bool = False,<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506736\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1506<\/em>,\n      in <code class=\"function\">finalize_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>with the `from_error_handler` flag.  If enabled, failures in<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>response processing will be logged and otherwise ignored.<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>:internal:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>response = self.make_response(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>response = self.process_response(response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>request_finished.send(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>self, _async_wrapper=self.ensure_sync, response=response<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190501024\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1801<\/em>,\n      in <code class=\"function\">make_response<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">                    <\/span>&#34; (body, status), or (body, headers).&#34;<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>)<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># the body must not be None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if rv is None:<\/pre>\n<pre class=\"line current\"><span class=\"ws\">            <\/span>raise TypeError(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>f&#34;The view function for {request.endpoint!r} did not&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; return a valid response. The function either returned&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; None or ended without a return statement.&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre><\/div>\n<\/div>\n<\/ul>\n  <blockquote>TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/blockquote>\n<\/div>\n\n<div class=\"plain\">\n    <p>\n      This is the Copy\/Paste friendly version of the traceback.\n    <\/p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py&#34;, line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1506, in finalize_request\n    response = self.make_response(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/textarea>\n<\/div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.<\/span>\n<\/div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC<\/strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      <\/div>\n    <\/div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked<\/h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        <\/form>\n      <\/div>\n    <\/div>\n  <\/body>\n<\/html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\", line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1506, in finalize_request\n    response = self.make_response(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n\n\n-->\n\napi files + tests + server\/tests\/test.feature:21","millis":17.522563,"status":"failed"},"step":{"line":21,"prefix":"Then","index":3,"text":"status 201"},"stepLog":"19:39:40.607 api files + tests + server\/tests\/test.feature:21\nThen status 201\nstatus code was: 500, expected: 201, response time in milliseconds: 100, url: http:\/\/localhost:5000\/students\/add, response: \n<!doctype html>\n<html lang=en>\n  <head>\n    <title>TypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n \/\/ Werkzeug Debugger<\/title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"><\/script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"U8bJF8gx4EpyVZiVjE91\";\n    <\/script>\n  <\/head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>TypeError<\/h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/p>\n<\/div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)<\/em><\/h2>\n<div class=\"traceback\">\n  <h3><\/h3>\n  <ul><li><div class=\"frame\" id=\"frame-140653190507408\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2213<\/em>,\n      in <code class=\"function\">__call__<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    <\/span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>WSGI application. This calls :meth:`wsgi_app`, which can be<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>wrapped to apply middleware.<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.wsgi_app(environ, start_response)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190503824\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2193<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>raise<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>return response(environ, start_response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>finally:<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499568\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\"<\/cite>,\n      line <em class=\"line\">165<\/em>,\n      in <code class=\"function\">wrapped_function<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span># Wrap exception handlers with cross_origin<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># These error handlers will still respect the behavior of the route<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if options.get(&#39;intercept_exceptions&#39;, True):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>def _after_request_decorator(f):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>def wrapped_function(*args, **kwargs):<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                    <\/span>return cors_after_request(app.make_response(f(*args, **kwargs)))<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>return wrapped_function<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>if hasattr(app, &#39;handle_exception&#39;):<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>app.handle_exception = _after_request_decorator(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                    <\/span>app.handle_exception)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499680\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2190<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>ctx = self.request_context(environ)<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>error: BaseException | None = None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506624\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1487<\/em>,\n      in <code class=\"function\">full_dispatch_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.preprocess_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>if rv is None:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>rv = self.dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.handle_user_exception(e)<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.finalize_request(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">    <\/span>def finalize_request(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>self,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>rv: ft.ResponseReturnValue | HTTPException,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>from_error_handler: bool = False,<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506736\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1506<\/em>,\n      in <code class=\"function\">finalize_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>with the `from_error_handler` flag.  If enabled, failures in<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>response processing will be logged and otherwise ignored.<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>:internal:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>response = self.make_response(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>response = self.process_response(response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>request_finished.send(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>self, _async_wrapper=self.ensure_sync, response=response<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190501024\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1801<\/em>,\n      in <code class=\"function\">make_response<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">                    <\/span>&#34; (body, status), or (body, headers).&#34;<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>)<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># the body must not be None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if rv is None:<\/pre>\n<pre class=\"line current\"><span class=\"ws\">            <\/span>raise TypeError(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>f&#34;The view function for {request.endpoint!r} did not&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; return a valid response. The function either returned&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; None or ended without a return statement.&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre><\/div>\n<\/div>\n<\/ul>\n  <blockquote>TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/blockquote>\n<\/div>\n\n<div class=\"plain\">\n    <p>\n      This is the Copy\/Paste friendly version of the traceback.\n    <\/p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py&#34;, line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1506, in finalize_request\n    response = self.make_response(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/textarea>\n<\/div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.<\/span>\n<\/div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC<\/strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      <\/div>\n    <\/div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked<\/h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        <\/form>\n      <\/div>\n    <\/div>\n  <\/body>\n<\/html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\", line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1506, in finalize_request\n    response = self.make_response(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n\n\n-->\n\napi files + tests + server\/tests\/test.feature:21\n"}],"line":10,"description":"","durationMillis":707.34769,"failed":true,"error":"status code was: 500, expected: 201, response time in milliseconds: 100, url: http:\/\/localhost:5000\/students\/add, response: \n<!doctype html>\n<html lang=en>\n  <head>\n    <title>TypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n \/\/ Werkzeug Debugger<\/title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"><\/script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"U8bJF8gx4EpyVZiVjE91\";\n    <\/script>\n  <\/head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>TypeError<\/h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/p>\n<\/div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)<\/em><\/h2>\n<div class=\"traceback\">\n  <h3><\/h3>\n  <ul><li><div class=\"frame\" id=\"frame-140653190507408\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2213<\/em>,\n      in <code class=\"function\">__call__<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    <\/span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>WSGI application. This calls :meth:`wsgi_app`, which can be<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>wrapped to apply middleware.<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.wsgi_app(environ, start_response)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190503824\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2193<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>raise<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>return response(environ, start_response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>finally:<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499568\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\"<\/cite>,\n      line <em class=\"line\">165<\/em>,\n      in <code class=\"function\">wrapped_function<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span># Wrap exception handlers with cross_origin<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># These error handlers will still respect the behavior of the route<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if options.get(&#39;intercept_exceptions&#39;, True):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>def _after_request_decorator(f):<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>def wrapped_function(*args, **kwargs):<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                    <\/span>return cors_after_request(app.make_response(f(*args, **kwargs)))<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>return wrapped_function<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>if hasattr(app, &#39;handle_exception&#39;):<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>app.handle_exception = _after_request_decorator(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                    <\/span>app.handle_exception)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190499680\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">2190<\/em>,\n      in <code class=\"function\">wsgi_app<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>ctx = self.request_context(environ)<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>error: BaseException | None = None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>try:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>ctx.push()<\/pre>\n<pre class=\"line current\"><span class=\"ws\">                <\/span>response = self.full_dispatch_request()<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except Exception as e:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = e<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>response = self.handle_exception(e)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>except:  # noqa: B001<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>error = sys.exc_info()[1]<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506624\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1487<\/em>,\n      in <code class=\"function\">full_dispatch_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.preprocess_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>if rv is None:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>rv = self.dispatch_request()<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>except Exception as e:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">            <\/span>rv = self.handle_user_exception(e)<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>return self.finalize_request(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line after\"><span class=\"ws\">    <\/span>def finalize_request(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>self,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>rv: ft.ResponseReturnValue | HTTPException,<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>from_error_handler: bool = False,<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190506736\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1506<\/em>,\n      in <code class=\"function\">finalize_request<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        <\/span>with the `from_error_handler` flag.  If enabled, failures in<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>response processing will be logged and otherwise ignored.<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>:internal:<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>&#34;&#34;&#34;<\/pre>\n<pre class=\"line current\"><span class=\"ws\">        <\/span>response = self.make_response(rv)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">        <\/span>try:<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>response = self.process_response(response)<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>request_finished.send(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>self, _async_wrapper=self.ensure_sync, response=response<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre><\/div>\n<\/div>\n\n<li><div class=\"frame\" id=\"frame-140653190501024\">\n  <h4>File <cite class=\"filename\">\"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\"<\/cite>,\n      line <em class=\"line\">1801<\/em>,\n      in <code class=\"function\">make_response<\/code><\/h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">                    <\/span>&#34; (body, status), or (body, headers).&#34;<\/pre>\n<pre class=\"line before\"><span class=\"ws\">                <\/span>)<\/pre>\n<pre class=\"line before\"><span class=\"ws\"><\/span> <\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span># the body must not be None<\/pre>\n<pre class=\"line before\"><span class=\"ws\">        <\/span>if rv is None:<\/pre>\n<pre class=\"line current\"><span class=\"ws\">            <\/span>raise TypeError(<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>f&#34;The view function for {request.endpoint!r} did not&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; return a valid response. The function either returned&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">                <\/span>&#34; None or ended without a return statement.&#34;<\/pre>\n<pre class=\"line after\"><span class=\"ws\">            <\/span>)<\/pre>\n<pre class=\"line after\"><span class=\"ws\"><\/span> <\/pre><\/div>\n<\/div>\n<\/ul>\n  <blockquote>TypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/blockquote>\n<\/div>\n\n<div class=\"plain\">\n    <p>\n      This is the Copy\/Paste friendly version of the traceback.\n    <\/p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py&#34;, line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1506, in finalize_request\n    response = self.make_response(rv)\n  File &#34;\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py&#34;, line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for &#39;add_student&#39; did not return a valid response. The function either returned None or ended without a return statement.\n<\/textarea>\n<\/div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.<\/span>\n<\/div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC<\/strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      <\/div>\n    <\/div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked<\/h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        <\/form>\n      <\/div>\n    <\/div>\n  <\/body>\n<\/html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2213, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2193, in wsgi_app\n    response = self.handle_exception(e)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask_cors\/extension.py\", line 165, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 2190, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1487, in full_dispatch_request\n    return self.finalize_request(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1506, in finalize_request\n    response = self.make_response(rv)\n  File \"\/home\/vboxuser\/.local\/lib\/python3.10\/site-packages\/flask\/app.py\", line 1801, in make_response\n    raise TypeError(\nTypeError: The view function for 'add_student' did not return a valid response. The function either returned None or ended without a return statement.\n\n\n-->\n\napi files + tests + server\/tests\/test.feature:21","executorName":"main","name":"Post student","startTime":1684863579847,"refId":"[2:10]","endTime":1684863580607,"exampleIndex":-1}],"callDepth":0,"name":"Karate Test","description":"","resultDate":"2023-05-23 07:39:40 pm","durationMillis":707.34769,"passedCount":0}